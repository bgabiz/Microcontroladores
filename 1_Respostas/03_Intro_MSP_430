1. Dada uma variável a do tipo char (um byte), escreva os trechos de código em C para: 
  (a) Somente setar o bit menos significativo de a. 
a |= BIT0; //operador OR
  (b) Somente setar dois bits de a: o menos significativo e o segundo menos significativo. 
a |= BIT0 + BIT1;
  (c) Somente zerar o terceiro bit menos significativo de a. 
a &= ~BIT2; //operador ADN com NOT
  (d) Somente zerar o terceiro e o quarto bits menos significativo de a. 
a &= ~BIT2 &= ~BIT3; 
  (e) Somente inverter o bit mais significativo de a. 
a ^= BIT7; //operador XOR
  (f) Inverter o nibble mais significativo de a, e setar o nibble menos significativo de a.

2. Considerando a placa Launchpad do MSP430, escreva o código em C para piscar os dois LEDs ininterruptamente.
#include <msp430g2553.h>

void main (void)
{
	WDTCTL = WDTPW | WDTHOLD; //Para o Watchdog Timer
	P1DIR = 0x41; //0b01000001, Bit 0 e Bit 6 são saída, o resto é entrada
	P1OUT = 0X41; //Seta os bits de saída para Vcc
	for(;;) //Fica nessa condição
	{
	}
}

3. Considerando a placa Launchpad do MSP430, escreva o código em C para piscar duas vezes os dois LEDs sempre que o usuário pressionar o 
botão.
#include <msp430g2553.h>
#define BTN BIT2 //Entrada
#define LED1 BIT0 //Saída
#define LED2 BIT6 //Saída

void main (void)
{
	WDTCTL = WDTPW | WDTHOLD;
	P1OUT = 0;
	P1DIR = LED1 + LED2; //Define as saídas
	for(;;)
	{
	    if(P1IN & BTN == 0) //Pisca o Led duas vezes
	    {
		P1OUT |= LED1 + LED2;
		P1OUT &= ~(LED1 + LED2);
		P1OUT |= LED1 + LED2;
		P1OUT &= ~(LED1 + LED2);
	    }
	    else
		P1OUT = 0;

	}
}

4. Considerando a placa Launchpad do MSP430, faça uma função em C que pisca os dois LEDs uma vez.
#include <msp430g2553.h>
#define LED1 BIT0 //Saída
#define LED2 BIT6 //Saída

void blink ()
{
	PIDIR = LED1 + LED2;
	PIOUT |= LED1 + LED2;

}

5. Reescreva o código da questão 2 usando a função da questão 4.
#include <msp430g2553.h>
#define LED1 BIT0 //Saída
#define LED2 BIT6 //Saída

void blink ()
{
	PIDIR = LED1 + LED2;
	PIOUT |= LED1 + LED2;

}

void main (void)
{
	WDTCTL = WDTPW | WDTHOLD; //Para o Watchdog Timer
	for(;;) //Fica nessa condição
	{
	}
}

6. Reescreva o código da questão 3 usando a função da questão 4.
#include <msp430g2553.h>
#define LED1 BIT0 //Saída
#define LED2 BIT6 //Saída

void blink ()
{
	PIDIR = LED1 + LED2;
	PIOUT |= LED1 + LED2;

}
void main (void)
{
	WDTCTL = WDTPW | WDTHOLD;
	P1OUT = 0;
	P1DIR = LED1 + LED2; //Define as saídas
	for(;;)
	{
	    if(P1IN & BTN == 0) //Pisca o Led duas vezes
	    {
		P1OUT |= LED1 + LED2;
		P1OUT &= ~(LED1 + LED2);
		P1OUT |= LED1 + LED2;
		P1OUT &= ~(LED1 + LED2);
	    }
	    else
		P1OUT = 0;

	}
}
